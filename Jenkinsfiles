pipeline{
    agent any
    
     tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment {
        SCANNER_HOME = tool 'sonarqube'
        SONAR_TOKEN=credentials('sonar-token-camp')
        IMAGE_NAME = 'rahul6364/yelp-camp'
        IMAGE_TAG= "${RELEASE}-${BUILD_NUMBER}"
        JENKINS_API_TOKEN=credentials('JENKINS_API_TOKEN')
    }

    stages{
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('git checkout'){
            steps{
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/rahul6364/yelp_camp.git'
            }
        }
        stage('install dependencies'){
            steps{
                sh 'npm install'
            }
        }
        stage('test case'){
            steps{
                sh 'npm test'
            }
        }
        stage('trivy fs scan'){
            steps{
                sh "trivy fs --format table -o trivy-report.txt ."
            }
        }
        stage('sonarqube scanner'){
            steps{
                withSonarQubeEnv('sonarqube') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=camp \
                        -Dsonar.projectName=camp \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://sonarqube:9000 \
                        -Dsonar.token=${SONAR_TOKEN}
                    '''
                } 
            }
        }

        stage('image build and tag'){
            steps{
                script{
                    withDockerRegistry(credentialsId: 'dockerhub', toolName: 'docker') {
                        sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                    }
                }
            }
        }

        stage('trivy image scan'){
            steps{
                sh "trivy image --format table -o trivy-report.txt rahul6364/yelp-camp:${IMAGE_TAG}"
            }
        }
        stage('push to dockerhub'){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "docker login -u $DOCKER_USER -p $DOCKER_PASS"
                    sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }
        stage('post-build cleanup'){
            steps{
                cleanWs()
            }
        }
        stage('trigger cd job'){
            steps{
            curl -v -k --user rahul:{JENKINS_API_TOKEN} \
            -X post \
            -H 'cache-control: no-cache' \
            -H 'content-type: application/x-www-form-urlencoded' \
            --data 'IMAGE_TAG=${IMAGE_TAG}' \
            https://6728fc02d812.ngrok-free.app/job/camp-cd/buildWithParameters?token=gitOps-token
            }
        }

    }
}
